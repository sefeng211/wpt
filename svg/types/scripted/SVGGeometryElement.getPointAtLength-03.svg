<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:html="http://www.w3.org/1999/xhtml">
  <title>When SVGGeometryElement.getPointAtLength is called with non-rendered, throw exception</title>
  <metadata>
    <html:link rel="help" href="https://svgwg.org/svg2-draft/types.html#__svg__SVGGeometryElement__getPointAtLength"/>
  </metadata>
  <html:script src="/resources/testharness.js"/>
  <html:script src="/resources/testharnessreport.js"/>
  <script><![CDATA[
  test(function() {
    var pathElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
    function pointAtLength(string) {
      pathElement.setAttribute("d", string);
      var point = pathElement.getPointAtLength(700);
      return [Math.round(point.x), Math.round(point.y)];
    }

    assert_throws_dom("InvalidStateError", function() { pointAtLength('M0,20 L400,20 L640,20') });
    assert_throws_dom("InvalidStateError", function() { pointAtLength('M0,20 L400,20 L640,20 z') });
    assert_throws_dom("InvalidStateError", function() { pointAtLength('M0,20 L400,20 z M 320,20 L640,20') });
    assert_throws_dom("InvalidStateError", function() { pointAtLength('M0,20 L20,40') });
  }, document.title + " with SVGPathElement");
  test(function() {
    var rectElement = document.createElementNS("http://www.w3.org/2000/svg", "rect");
    rectElement.setAttribute("rx", 0);
    rectElement.setAttribute("ry", 0);
    rectElement.setAttribute("width", 200);
    rectElement.setAttribute("height", 300);
    assert_throws_dom("InvalidStateError", function() { rectElement.getPointAtLength(300); });
  }, document.title + " with SVGRectElement");
  test(function() {
    var circleElement = document.createElementNS("http://www.w3.org/2000/svg", "circle");
    circleElement.setAttribute("r", 10);
    assert_throws_dom("InvalidStateError", function() { circleElement.getPointAtLength(100); });
  }, document.title + " with SVGCircleElement");
  ]]></script>
</svg>
